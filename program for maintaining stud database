import java.io.*;
import java.util.Scanner;

public class Student {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String studentname; 
    int rollno;
    long mob_no;
    float marks;
	String address;
    // Method to create a new file
    void create() {
        try {
            File file = new File("Student.txt");
            boolean x = file.createNewFile();
            if (x) {
                System.out.println("File has been created successfully! ");
            } else {
                System.out.println("File already present");
            }
        } catch (IOException e) {
            System.out.println("Exception Occurred:");
        }

        try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("Student.txt", true)))) {
            int x = 1;
            do {
                Scanner sc = new Scanner(System.in);
                int y;
                System.out.print("\nEnter Student Name: ");
                studentname = br.readLine();
                System.out.print("Student Roll no: ");
                rollno = Integer.parseInt(br.readLine());		
                System.out.print("Mobile Number: ");
                mob_no = Long.parseLong(br.readLine());
                System.out.print("Marks : ");
                marks = Float.parseFloat(br.readLine());
				System.out.print("Address : ");
                address = br.readLine();


                pw.println(studentname + "\t" + rollno + "\t" + marks + "\t" + mob_no +"\t"+address);
                System.out.println("Do you want to enter more records? \n1) Yes\n2) No");
                y = sc.nextInt();
                if(y == 2) {
                    x = 0;
                }
            } while(x == 1);
        } catch(IOException e) {
            System.out.println(e);
        }
    }

    void display() {
        try (BufferedReader file = new BufferedReader(new FileReader("Student.txt"))) {
            String name;
            while ((name = file.readLine()) != null) {
                System.out.println(name);
            }
        } catch (FileNotFoundException e) {
            System.out.println("\nERROR : File not Found !!!");
        } catch(IOException e) {
            System.out.println(e);
        }
    }

    void search() {
        try (BufferedReader file = new BufferedReader(new FileReader("Student.txt"))) {
            String name;
            int flag = 0;
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter the roll number of the student you want to search: ");
            String searchRollNo = sc.next();
            while ((name = file.readLine()) != null) {
                String[] line = name.split("\t");
                if (searchRollNo.equalsIgnoreCase(line[1])) {
                    System.out.println("Record found");
                    System.out.println(name);
                    flag = 1;
                    break;
                }
            }
            if (flag == 0)
                System.out.println("Record not found");
        } catch (FileNotFoundException e) {
            System.out.println("\nERROR : File not Found !!!");
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    void clearRecords() {
        try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("Student.txt")))) {
            pw.close();
            System.out.println("\nAll Records cleared successfully !");
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    void modify() {
        try {
            File inputFile = new File("Student.txt");
            File tempFile = new File("tempStudent.txt");

            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(tempFile)));

            String name;
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter the roll number of the student you want to update: ");
            String searchRollNo = sc.next();
            boolean found = false;

            while ((name = reader.readLine()) != null) {
                String[] line = name.split("\t");
                if (searchRollNo.equalsIgnoreCase(line[1])) {
                    found = true;
                    System.out.println("Record found");
                    System.out.println("Enter updated marks:");
                    String up_mark = sc.next();
                    writer.println(line[0] + "\t" + line[1] + "\t" + up_mark + "\t" + line[3]);
                } else {
                    writer.println(name);
                }
            }
            reader.close();
            writer.close();

            if (found) {
                if (inputFile.delete()) {
                    if (tempFile.renameTo(inputFile)) {
                        System.out.println("Record updated successfully");
                    } else {
                        System.out.println("Could not rename the file");
                    }
                } else {
                    System.out.println("Could not delete the original file");
                }
            } else {
                tempFile.delete(); // Remove the temp file if no record was found
                System.out.println("No record found to update");
            }
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    void delete() {
        File file = new File("Student.txt");
        if (file.delete()) {
            System.out.println(file.getName() + " is deleted!");
        } else {
            System.out.println("Delete failed: File didn't delete");
        }
    }

    public static void main(String[] args) {
        Student s = new Student();
        int ch;

        Scanner sc = new Scanner(System.in);

        do {
            System.out.println("\n\n1. Create Database" + "\n2. Display Database" + "\n3. Search Records" + "\n4. Modify Records" + "\n5. Clear Records" + "\n6. Delete file" + "\n7. Exit");
            System.out.print("Enter Choice: ");
            ch = sc.nextInt();

            switch(ch) {
                case 1:
                    s.create();
                    break;
                case 2:
                    s.display();
                    break;
                case 3:
                    s.search();
                    break;
                case 4:
                    s.modify();
                    break;
                case 5:
                    s.clearRecords();
                    break;
                case 6:
                    s.delete();
                    break;
                case 7:
                    return;
                default:
                    System.out.println("Invalid choice!");
            }
        } while(true);
    }
}
